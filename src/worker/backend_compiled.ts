export default 'globalThis.WorkTankWorkerBackend=new class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(s,t){let i=this.methods[s],a=new Promise(e=>e(i.apply(void 0,t))),r=e=>{try{postMessage({type:"result",value:e})}catch(n){o(n)}},o=e=>{e=e instanceof Error?e:typeof e=="string"?new Error(e):new Error;let{message:n,name:c,stack:d}=e;postMessage({type:"result",error:{message:n,name:c,stack:d}})};a.then(r,o)}init(){postMessage({type:"ready"})}message(s){if(s.data.type==="init")return this.init();if(s.data.type==="exec")return this.exec(s.data.method,s.data.args)}register(s,t){this.methods[s]=t}};globalThis.process||(globalThis.process={});globalThis.process.env={...globalThis.process.env,...JSON.parse("/*! ENV_PLACEHOLDER !*/")}; /*! METHODS_PLACEHOLDER !*/';
