export default 'globalThis.WorkTankWorkerBackend=new class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(e,s){let o=this.methods[e],a=new Promise(t=>t(o.apply(void 0,s))),r=t=>{try{postMessage({type:"result",value:t})}catch(n){i(n)}},i=t=>{t=t instanceof Error?t:typeof t=="string"?new Error(t):new Error;let{message:n,name:d,stack:c}=t;postMessage({type:"result",error:{message:n,name:d,stack:c}})};a.then(r,i)}init(){postMessage({type:"ready"})}message(e){if(e.data.type==="init")return this.init();if(e.data.type==="exec")return this.exec(e.data.method,e.data.args)}register(e,s){this.methods[e]=s}}; /*! METHODS_PLACEHOLDER !*/';
