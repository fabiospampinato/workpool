export default 'globalThis.WorkTankWorkerBackend=new class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(e,t){let a=this.methods[e],r=new Promise(s=>s(a.apply(void 0,t))),i=s=>{try{postMessage({type:"result",value:s})}catch(o){n(o)}},n=s=>{s=s instanceof Error?s:typeof s=="string"?new Error(s):new Error;let{message:o,name:c,stack:d}=s;postMessage({type:"result",error:{message:o,name:c,stack:d}})};r.then(i,n)}message(e){if(e.data.type==="exec")return this.exec(e.data.method,e.data.args)}ready(){postMessage({type:"ready"})}register(e,t){this.methods[e]=t}};globalThis.process||(globalThis.process={});globalThis.process.env={...globalThis.process.env,...globalThis.process.ENV_PLACEHOLDER}; /*! METHODS_PLACEHOLDER !*/';
