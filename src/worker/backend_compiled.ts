export default 'globalThis.WorkTankWorkerBackend=new class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(s,t){let a=this.methods[s],r=new Promise(e=>e(a.apply(void 0,t))),i=e=>{try{postMessage({type:"result",value:e})}catch(o){n(o)}},n=e=>{e=e instanceof Error?e:typeof e=="string"?new Error(e):new Error;let{message:o,name:c,stack:d}=e;postMessage({type:"result",error:{message:o,name:c,stack:d}})};r.then(i,n)}message(s){if(s.data.type==="exec")return this.exec(s.data.method,s.data.args)}ready(){postMessage({type:"ready"})}register(s,t){this.methods[s]=t}};globalThis.process||(globalThis.process={});globalThis.process.env={...globalThis.process.env,...JSON.parse("/*! ENV_PLACEHOLDER !*/")}; /*! METHODS_PLACEHOLDER !*/';
