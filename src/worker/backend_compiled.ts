export default 'var o=class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(t,e){let n=this.methods[t],a=new Promise(s=>s(n.apply(void 0,e))),c=s=>{try{postMessage({type:"result",value:s})}catch(i){r(i)}},r=s=>{s=s instanceof Error?s:typeof s=="string"?new Error(s):new Error;let{message:i,name:d,stack:g}=s;postMessage({type:"result",error:{message:i,name:d,stack:g}})};a.then(c,r)}init(t){this.register(t),postMessage({type:"ready"})}message(t){if(t.data.type==="init")return this.init(t.data.methods);if(t.data.type==="exec")return this.exec(t.data.method,t.data.args)}register(t){if(typeof t=="string"){let e=new Function(t)();for(let n in e)this.methods[n]=e[n]}else for(let e in t){let n=new Function(`return (${t[e]})`)();this.methods[e]=n}}};new o;';
