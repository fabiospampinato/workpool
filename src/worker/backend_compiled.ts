export default 'var u=new Function("url","return import ( url );"),a=u;var i=class{constructor(){this.methods={};addEventListener("message",this.message.bind(this))}exec(t,s){let n=this.methods[t],c=new Promise(e=>e(n.apply({import:a},s))),d=e=>{try{postMessage({type:"result",value:e})}catch(o){r(o)}},r=e=>{e=e instanceof Error?e:typeof e=="string"?new Error(e):new Error;let{message:o,name:p,stack:g}=e;postMessage({type:"result",error:{message:o,name:p,stack:g}})};c.then(d,r)}init(t){this.register(t),postMessage({type:"ready"})}message(t){if(t.data.type==="init")return this.init(t.data.methods);if(t.data.type==="exec")return this.exec(t.data.method,t.data.args)}register(t){if(typeof t=="string"){let s=new Function(t)();for(let n in s)this.methods[n]=s[n]}else for(let s in t){let n=new Function(`return (${t[s]})`)();this.methods[s]=n}}};new i;';
